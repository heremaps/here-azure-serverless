{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hereAPI_KEY": {
            "type": "String"
        },
        "StorageAccountNewOrExisting": {
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String"
        },
        "storageAccountExistingRG": {
            "type": "String"
        },
        "storageAccountType": {
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS"
            ],
            "type": "String"
        },
        "storageName": {
            "type": "String"
        },
        "location": {
            "type": "String"
        },
        "functionZipPackageUrl": {
            "type": "String"
        }
    },
    "variables": {
        "offerType": "Standard",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "serviceBusNamespaceName": "[concat('hlssbus', uniqueString(resourceGroup().id))]",
        "defaultAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
        "sbVersion": "2018-01-01-preview",
        "sbNSAuthVersion" : "2017-04-01",
        "sbQVersion" : "2017-04-01",
        "documentDBVersion" : "2016-03-31",
        "webSiteVersion" : "2018-11-01",
        "storageVersion" : "2018-11-01",
        "cosmosDBAccountName": "[concat('hlsdb', '-', uniqueString(resourceGroup().id))]",
        "functionAppName1": "[concat('hlsapp1', uniqueString(resourceGroup().id))]",
        "functionAppName2": "[concat('hlsapp2', uniqueString(resourceGroup().id))]",
        "sbQueueName1": "fleet_queue_in",
        "sbQueueName2": "geocoder_queue_in",
        "sbQueueName3": "map_image_queue_in",
        "sbQueueName4": "map_tile_queue_in",
        "sbQueueName6": "positioning_queue_in",
        "sbQueueName7": "routing_queue_in",
        "sbQueueName8": "public_transit_queue_in"
    },
    "resources": [{
            "type": "Microsoft.ServiceBus/Namespaces",
            "apiVersion": "[variables('sbVersion')]",
            "name": "[variables('serviceBusNamespaceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "kind": "Messaging",
            "resources": [{
                    "type": "Queues",
                    "apiVersion": "[variables('sbQVersion')]",
                    "name": "[variables('sbQueueName1')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "path": "[variables('sbQueueName1')]"
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "[variables('sbQVersion')]",
                    "name": "[variables('sbQueueName2')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "path": "[variables('sbQueueName2')]"
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "[variables('sbQVersion')]",
                    "name": "[variables('sbQueueName3')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "path": "[variables('sbQueueName3')]"
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "[variables('sbQVersion')]",
                    "name": "[variables('sbQueueName4')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "path": "[variables('sbQueueName4')]"
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "[variables('sbQVersion')]",
                    "name": "[variables('sbQueueName6')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "path": "[variables('sbQueueName6')]"
                    }
                },
                {
                    "type": "Queues",
                    "apiVersion": "[variables('sbQVersion')]",
                    "name": "[variables('sbQueueName8')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "path": "[variables('sbQueueName8')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "[variables('documentDBVersion')]",
            "name": "[variables('cosmosDBAccountName')]",
            "location": "[parameters('location')]",
            "tags": {
                "defaultExperience": "DocumentDB"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "name": "[variables('cosmosDBAccountName')]",
                "databaseAccountOfferType": "[variables('offerType')]",
                "locations": [{
                    "id": "[concat(variables('cosmosDBAccountName'),'webapp')]",
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0
                }],
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "[variables('webSiteVersion')]",
            "name": "[variables('functionAppName1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "name": "[variables('functionAppName1')]",
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    },
                    "appSettings": [{
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'),';AccountKey=',listKeys(resourceId(subscription().subscriptionId,parameters('storageAccountExistingRG'),'Microsoft.Storage/storageAccounts', parameters('storageName')), variables('storageVersion')).keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'),';AccountKey=',listKeys(resourceId(subscription().subscriptionId,parameters('storageAccountExistingRG'),'Microsoft.Storage/storageAccounts', parameters('storageName')), variables('storageVersion')).keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'),';AccountKey=',listKeys(resourceId(subscription().subscriptionId,parameters('storageAccountExistingRG'),'Microsoft.Storage/storageAccounts', parameters('storageName')), variables('storageVersion')).keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(variables('functionAppName1')))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "10.14.1"
                        },
                        {
                            "name": "HERE_API_KEY",
                            "value": "[parameters('hereAPI_KEY')]"
                        },
                        {
                            "name": "HERE_COSMOSDB_ENDPOINT",
                            "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDBAccountName'))).documentEndpoint]"
                        },
                        {
                            "name": "HERE_COSMOSDB_KEY",
                            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDBAccountName')), variables('documentDBVersion')).primaryMasterKey]"
                        },
                        {
                            "name": "HERE_SERVICEBUS_CONNECTIONSTRING",
                            "value": "[listkeys(variables('defaultAuthRuleResourceId'), variables('sbNSAuthVersion')).primaryConnectionString]"
                        }
                    ]
                },
                "clientAffinityEnabled": false
            },
            "resources": [{
                "type": "extensions",
                "apiVersion": "[variables('webSiteVersion')]",
                "name": "MSDeploy",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/Sites', variables('functionAppName1'))]"
                ],
                "properties": {
                    "packageUri": "[parameters('functionZipPackageUrl')]"
                },
                "condition": "[equals(parameters('StorageAccountNewOrExisting'),'new')]"
            }],
            "condition": "[equals(parameters('StorageAccountNewOrExisting'),'new')]"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "[variables('webSiteVersion')]",
            "name": "[variables('functionAppName2')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "properties": {
                "name": "[variables('functionAppName2')]",
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    },
                    "appSettings": [{
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'),';AccountKey=',listKeys(resourceId(subscription().subscriptionId,parameters('storageAccountExistingRG'),'Microsoft.Storage/storageAccounts', parameters('storageName')), variables('storageVersion')).keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'),';AccountKey=',listKeys(resourceId(subscription().subscriptionId,parameters('storageAccountExistingRG'),'Microsoft.Storage/storageAccounts', parameters('storageName')), variables('storageVersion')).keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'),';AccountKey=',listKeys(resourceId(subscription().subscriptionId,parameters('storageAccountExistingRG'),'Microsoft.Storage/storageAccounts', parameters('storageName')), variables('storageVersion')).keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(variables('functionAppName2')))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "10.14.1"
                        },
                        {
                            "name": "HERE_API_KEY",
                            "value": "[parameters('hereAPI_KEY')]"
                        },
                        {
                            "name": "HERE_COSMOSDB_ENDPOINT",
                            "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDBAccountName'))).documentEndpoint]"
                        },
                        {
                            "name": "HERE_COSMOSDB_KEY",
                            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDBAccountName')), variables('documentDBVersion')).primaryMasterKey]"
                        },
                        {
                            "name": "HERE_SERVICEBUS_CONNECTIONSTRING",
                            "value": "[listkeys(variables('defaultAuthRuleResourceId'), variables('sbNSAuthVersion')).primaryConnectionString]"
                        }
                    ]
                },
                "clientAffinityEnabled": false
            },
            "resources": [{
                "type": "extensions",
                "apiVersion": "[variables('webSiteVersion')]",
                "name": "MSDeploy",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/Sites', variables('functionAppName2'))]"
                ],
                "properties": {
                    "packageUri": "[parameters('functionZipPackageUrl')]"
                },
                "condition": "[equals(parameters('StorageAccountNewOrExisting'),'existing')]"
            }],
            "condition": "[equals(parameters('StorageAccountNewOrExisting'),'existing')]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageVersion')]",
            "name": "[parameters('storageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "properties": {
                "name": "[parameters('storageAccountType')]"
            },
            "condition": "[equals(parameters('StorageAccountNewOrExisting'),'new')]"
        }
    ],
    "outputs": {
        "ServiceBusName": {
            "type": "String",
            "value": "[variables('serviceBusNamespaceName')]"
        },
        "CosmosDBName": {
            "type": "String",
            "value": "[variables('cosmosDBAccountName')]"
        },
        "StorageName": {
            "type": "String",
            "value": "[parameters('storageName')]"
        }
    }
}
